# Байт-компиляция / оптимизация / DLL-файлы
__pycache__/
*.py[треска]
*$py.class

# Расширения C
*(с)

# Дистрибуция / упаковка
. Питон
строить/
развиваются-яйца/
dist/
Загрузки/
Яйца/
.Яйца/
lib/
lib64/
комплектующие/
СДИСТ/
var/
Колеса/
share/python-wheels/
*.egg-info/
.installed.cfg
*.яйцо
ОЧЕВИДНЫЙ

# PyInstaller
# Обычно эти файлы написаны скриптом python из шаблона
# перед тем, как PyInstaller соберет исполняемый файл, чтобы вставить в него дату/другую информацию.
*.очевидный
*.спекуляция

# Журналы установщика
pip-лог.txt
pip-delete-this-directory.txt

# Отчеты о модульных испытаниях / покрытии
HTMLCOV/
.Токс/
.nox/
.охват
.охват.*
.тайник
носовые тесты.xml
Покрытие.xml
*.крышка
*.py, обложка
.гипотеза/
.pytest_cache/
крышка/

# Переводы
*.mo
*.горшок

# Материал Django:
*..log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Колба:
пример/
.webassets-cache

# Неприятные вещи:
.scrapy

# Документация по Сфинксу
Документы/_build/

# PyBuilder
.pybuilder/
цель/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# пьенв
# Для библиотеки или пакета вы можете игнорировать эти файлы, так как код
# предназначен для работы в нескольких средах; В противном случае отметьте их:
# .python-версия

# Пипенв
# Согласно pypa/pipenv#598, рекомендуется включать Pipfile.lock в систему управления версиями.
# Однако в случае совместной работы, если у вас есть зависимости или зависимости, зависящие от конкретной платформы
# Не имея кроссплатформенной поддержки, pipenv может устанавливать зависимости, которые не работают или не работают
# установить все необходимые зависимости.
# Pipfile.lock

# поэзия
# Как и в случае с Pipfile.lock, обычно рекомендуется включать poetry.lock в систему управления версиями.
# Это особенно рекомендуется для двоичных пакетов, чтобы обеспечить воспроизводимость, и многое другое
# обычно игнорируется для библиотек.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#поэзия.замок

# ДПМ
# Как и в случае с Pipfile.lock, обычно рекомендуется включать pdm.lock в систему управления версиями.
#pdm.lock
# PDM хранит конфигурации на уровне проекта в .pdm.toml, но его не рекомендуется включать
# в системе управления версиями.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# ПКП 582; используется, например, github.com/David-OConnor/pyflow и github.com/pdm-project/pdm
__pypackages__/

# Фарш из сельдерея
сельдерей-расписание
celerybeat.pid

# SageMath анализирует файлы
*.sage.py

# Средах
.env
.venv
Окружающая среда/
Венв/
ЭНВ/
env.bak/
Венв.bak/

# Настройки проекта Spyder
.spyderproject
.spyпроект

# Настройки проекта Rope
.ropeproject

# Документация по mkdocs
/место

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Шашка типа костра
.погребальный костер/

# Статический анализатор типов pytype
.pytype/

# Отладочные символы Cython
cython_debug/

# PyCharm
# Специальный шаблон JetBrains хранится в отдельном файле JetBrains.gitignore, который может
# можно найти в https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# и могут быть добавлены в глобальный gitignore или объединены в этот файл. Для более ядерного
# (не рекомендуется) Вы можете раскомментировать следующее, чтобы игнорировать всю папку идей.
.идея/
